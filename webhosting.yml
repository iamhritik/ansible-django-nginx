---
- name: Django & Nginx Deployment
  hosts: all
  become: yes

  vars_files: "vars/Ubuntu.yml"

  handlers:
    - name: restart_nginx
      service:
        name: nginx
        state: restarted

  tasks:
    - name: Install required packages for Deployment
      package:
        name: ['python3', 'python3-pip', 'build-essential', 'libpq-dev', 'python-setuptools', 'python-dev', 'nginx', 'virtualenv']
        state: present
        update_cache: yes

    - name: Create an user with name webhost
      user:
        name: "{{ web_user }}"
        groups: sudo
        comment: web_hosting_user
        create_home: yes
        state: present

    - name: Add Git Repository
      git:
        repo: '{{ github_repo }}'
        dest: "/home/{{ web_user }}/{{ project_name}}"
        update: no
        force: yes

    - name: Configure virtualenv and install python modules
      pip:
        name: ['gunicorn', 'django']
        virtualenv: "/home/{{ web_user }}/"
        virtualenv_command: virtualenv
        virtualenv_python: python3.8

    - name: Change home dir permission & group
      file:
        path: "/home/{{ web_user }}"
        group: www-data
        state: directory
        mode: 0777
        recurse: yes

    - stat:
        path: /etc/systemd/system/gunicorn.service
      register: gunicorn_file

    - name: Create gunicorn service
      template:
        src: gunicorn.service.j2
        dest: /etc/systemd/system/gunicorn.service
        mode: 0777
      when: gunicorn_file.stat.exists == false

    - name: Reload Daemon
      systemd:
        daemon_reload: yes

    - name: start gunicorn service
      service:
        name: gunicorn
        state: started

#nginx configuration
    - name: Create Nginx server block
      template:
        src: nginx_project.j2
        dest: "/etc/nginx/sites-available/{{ project_name }}"
        owner: root
        mode: 0777

    - name: Remove nginx default page
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart_nginx

    - name: Create a symbolic link of nginx server block
      file:
        src: "/etc/nginx/sites-available/{{ project_name }}"
        dest: "/etc/nginx/sites-enabled/{{ project_name }}"
        state: link
      notify: restart_nginx

    - name: check nginx configuration error
      command: nginx -t
      register: nginxconfigcheck

    - name: show nginx any syntax errors
      debug:
        var: nginxconfigcheck
